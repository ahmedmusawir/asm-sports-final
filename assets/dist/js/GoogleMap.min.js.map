{"version":3,"file":"GoogleMap.min.js","sources":["GoogleMap.min.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\n(function ($) {\n  /*\n   *  new_map\n   *\n   *  This function will render a Google Map onto the selected jQuery element\n   *\n   *  @type  function\n   *  @date  8/11/2013\n   *  @since 4.3.0\n   *\n   *  @param $el (jQuery element)\n   *  @return  n/a\n   */\n  function new_map($el) {\n    // var\n    var $markers = $el.find('.marker'); // vars\n\n    var args = {\n      zoom: 10,\n      // center: new google.maps.LatLng(-100, 0),\n      center: new google.maps.LatLng(0, 0),\n      mapTypeId: google.maps.MapTypeId.ROADMAP\n    }; // create map\n\n    var map = new google.maps.Map($el[0], args); // add a markers reference\n\n    map.markers = []; // add markers\n\n    $markers.each(function () {\n      add_marker($(this), map);\n    }); // center map\n\n    center_map(map); // return\n\n    return map;\n  }\n  /*\n   *  add_marker\n   *\n   *  This function will add a marker to the selected Google Map\n   *\n   *  @type  function\n   *  @date  8/11/2013\n   *  @since 4.3.0\n   *\n   *  @param $marker (jQuery element)\n   *  @param map (Google Map object)\n   *  @return  n/a\n   */\n\n\n  function add_marker($marker, map) {\n    // var\n    var latlng = new google.maps.LatLng($marker.attr('data-lat'), $marker.attr('data-lng')); // create marker\n\n    var marker = new google.maps.Marker({\n      position: latlng,\n      map: map\n    }); // add to array\n\n    map.markers.push(marker); // if marker contains HTML, add it to an infoWindow\n\n    if ($marker.html()) {\n      // create info window\n      var infowindow = new google.maps.InfoWindow({\n        content: $marker.html()\n      }); // show info window when marker is clicked\n\n      google.maps.event.addListener(marker, 'click', function () {\n        infowindow.open(map, marker);\n      });\n    }\n  }\n  /*\n   *  center_map\n   *\n   *  This function will center the map, showing all markers attached to this map\n   *\n   *  @type  function\n   *  @date  8/11/2013\n   *  @since 4.3.0\n   *\n   *  @param map (Google Map object)\n   *  @return  n/a\n   */\n\n\n  function center_map(map) {\n    // vars\n    var bounds = new google.maps.LatLngBounds(); // loop through all markers and create bounds\n\n    $.each(map.markers, function (i, marker) {\n      var latlng = new google.maps.LatLng(marker.position.lat(), marker.position.lng());\n      bounds.extend(latlng);\n    }); // only 1 marker?\n\n    if (map.markers.length == 1) {\n      // set center of map\n      map.setCenter(bounds.getCenter());\n      map.setZoom(16);\n    } else {\n      // fit to bounds\n      map.fitBounds(bounds);\n      map.setCenter(bounds.getCenter());\n      map.setZoom(11);\n    }\n  }\n  /*\n   *  document ready\n   *\n   *  This function will render each map when the document is ready (page has loaded)\n   *\n   *  @type  function\n   *  @date  8/11/2013\n   *  @since 5.0.0\n   *\n   *  @param n/a\n   *  @return  n/a\n   */\n  // global var\n\n\n  var map = null;\n  $(document).ready(function () {\n    $('.acf-map').each(function () {\n      // $('.google-map-innerbox').each(function () {\n      // create map\n      map = new_map($(this));\n    });\n  });\n})(jQuery);\n\n},{}]},{},[1]);\n"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","new_map","$el","map","bounds","$markers","find","args","zoom","center","google","maps","LatLng","mapTypeId","MapTypeId","ROADMAP","Map","markers","each","$marker","latlng","attr","marker","Marker","position","infowindow","push","html","InfoWindow","content","event","addListener","open","add_marker","$","this","LatLngBounds","lat","lng","extend","setCenter","getCenter","setZoom","fitBounds","jQuery","document","ready"],"mappings":"CAAY,SAASA,EAAEC,EAAEC,EAAEC,GAAG,SAASC,EAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,IAAIE,EAAE,mBAAmBC,SAASA,QAAQ,IAAIF,GAAGC,EAAE,OAAOA,EAAEF,GAAE,GAAI,GAAGI,EAAE,OAAOA,EAAEJ,GAAE,GAAI,IAAIK,EAAE,IAAIC,MAAM,uBAAuBN,EAAE,KAAK,MAAMK,EAAEE,KAAK,mBAAmBF,EAAE,IAAIG,EAAEX,EAAEG,GAAG,CAACS,QAAQ,IAAIb,EAAEI,GAAG,GAAGU,KAAKF,EAAEC,QAAQ,SAASd,GAAoB,OAAOI,EAAlBH,EAAEI,GAAG,GAAGL,IAAeA,IAAIa,EAAEA,EAAEC,QAAQd,EAAEC,EAAEC,EAAEC,GAAG,OAAOD,EAAEG,GAAGS,QAAQ,IAAI,IAAIL,EAAE,mBAAmBD,SAASA,QAAQH,EAAE,EAAEA,EAAEF,EAAEa,OAAOX,IAAID,EAAED,EAAEE,IAAI,OAAOD,EAA7b,CAA4c,CAACa,EAAE,CAAC,SAAST,EAAQU,EAAOJ,gBAgBte,SAASK,EAAQC,GAEf,IAwEkBC,EAEdC,EA1EAC,EAAWH,EAAII,KAAK,WAEpBC,EAAO,CACTC,KAAM,GAENC,OAAQ,IAAIC,OAAOC,KAAKC,OAAO,EAAG,GAClCC,UAAWH,OAAOC,KAAKG,UAAUC,SAG/BZ,EAAM,IAAIO,OAAOC,KAAKK,IAAId,EAAI,GAAIK,GAUtC,OARAJ,EAAIc,QAAU,GAEdZ,EAASa,KAAK,YAuBhB,SAAoBC,EAAShB,GAE3B,IAAIiB,EAAS,IAAIV,OAAOC,KAAKC,OAAOO,EAAQE,KAAK,YAAaF,EAAQE,KAAK,aAEvEC,EAAS,IAAIZ,OAAOC,KAAKY,OAAO,CAClCC,SAAUJ,EACVjB,IAAKA,IAKP,CAAA,IAEMsB,EAJNtB,EAAIc,QAAQS,KAAKJ,GAEbH,EAAQQ,SAENF,EAAa,IAAIf,OAAOC,KAAKiB,WAAW,CAC1CC,QAASV,EAAQQ,SAGnBjB,OAAOC,KAAKmB,MAAMC,YAAYT,EAAQ,QAAS,WAC7CG,EAAWO,KAAK7B,EAAKmB,OAxCvBW,CAAWC,EAAEC,MAAOhC,KA0DJA,EAvDPA,EAyDPC,EAAS,IAAIM,OAAOC,KAAKyB,aAE7BF,EAAEhB,KAAKf,EAAIc,QAAS,SAAU9B,EAAGmC,GAC/B,IAAIF,EAAS,IAAIV,OAAOC,KAAKC,OAAOU,EAAOE,SAASa,MAAOf,EAAOE,SAASc,OAC3ElC,EAAOmC,OAAOnB,KAGU,GAAtBjB,EAAIc,QAAQnB,QAEdK,EAAIqC,UAAUpC,EAAOqC,aACrBtC,EAAIuC,QAAQ,MAGZvC,EAAIwC,UAAUvC,GACdD,EAAIqC,UAAUpC,EAAOqC,aACrBtC,EAAIuC,QAAQ,KAtEPvC,EAlCX,IAAW+B,GAAAA,EAkIRU,QAPCC,UAAUC,MAAM,WAChBZ,EAAE,YAAYhB,KAAK,WAGXjB,EAAQiC,EAAEC,YAKpB,KAAK,GAAG,CAAC"}